groups:
  - name: "Configuration"
    description: "Qbittorent application configuration"
  - name: "Storage"
    description: "Configure storage for qbittorent"
  - name: "Networking"
    description: "Networking Configuration for qbittorent"
  - name: "VPN"
    description: "VPN Configuration for qbittorent"
  - name: "Advanced DNS Settings"
    description: "Configure DNS settings"
  - name: "Resource Limits"
    description: "Set CPU/memory limits for Kubernetes Pod"

portals:
  web_portal:
    protocols:
      - "http"
    host:
      - "$node_ip"
    ports:
      - "$variable-web_port"
    path: "/"

questions:
  - variable: web_port
    label: "Web Port for qbittorent"
    group: Networking
    schema:
      type: int
      min: 8000
      max: 65535
      default: 18080
      required: true
  - variable: tcp_port
    label: "TCP Port for qbittorent"
    group: Networking
    schema:
      type: int
      min: 8000
      max: 65535
      default: 20988
      required: true
  - variable: udp_port
    label: "UDP Port for qbittorent"
    group: Networking
    schema:
      type: int
      min: 8000
      max: 65535
      default: 20989
      required: true

  
  - variable: vpn_enabled
    label: "Enable VPN for Qbittorent"
    group: VPN
    schema:
      type: boolean
      default: true
      required: true
  - variable: vpn_user
    label: "VPN username"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: string
      required: true
  - variable: vpn_pass
    label: "VPN password"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: string
      required: true
      private: true
  - variable: vpn_prov
    label: "VPN provider"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: string
      options: ["pia","airvpn","custom"]
      default: "pia"
      required: true
      editable: false
  - variable: vpn_client
    label: "VPN client"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: string
      options: ["wireguard","openvpn"]
      default: "wireguard"
      required: true
      editable: false
  - variable: vpn_strict_port_forward
    label: "VPN strict port forward"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: string
      options: ["yes","no"]
      default: "yes"
      required: true
      editable: false
  - variable: vpn_input_ports
    label: "VPN input ports"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: int
      default: 1234
      required: true
  - variable: vpn_output_ports
    label: "VPN output ports"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: int
      default: 5678
      required: true
  - variable: vpn_enable_privoxy
    label: "Enable Privoxy"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: string
      options: ["yes","no"]
      default: "yes"
      required: true
      editable: false
  - variable: vpn_lan_network
    label: "LAN CIDR"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: ipaddr
      required: true
  - variable: vpn_debug
    label: "Enable debug logging"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: string
      required: true
      options: ["true", "false"]
      default: "false"
  - variable: vpn_dns
    label: "DNS servers for VPN"
    group: VPN
    schema:
      show_if: [["vpn_enabled", "=", true]]
      type: string

  - variable: dnsConfig
    label: "DNS Configuration"
    group: "Advanced DNS Settings"
    schema:
      type: dict
      attrs:
        - variable: options
          label: "DNS Options"
          schema:
            type: list
            items:
              - variable: optionsEntry
                label: "Option Entry Configuration"
                schema:
                  type: dict
                  attrs:
                    - variable: name
                      label: "Option Name"
                      schema:
                        type: string
                        required: true
                    - variable: value
                      label: "Option Value"
                      schema:
                        type: string
                        required: true

  - variable: ownerUID
    label: "Owner User ID"
    group: Configuration
    schema:
      type: int
      default: 568
      min: 1
      max: 65535

  - variable: ownerGID
    label: "Owner Group ID"
    group: Configuration
    schema:
      type: int
      default: 568
      min: 1
      max: 65535

  - variable: timezone
    label: "Timezone"
    group: "Configuration"
    schema:
      type: string
      $ref:
        - "definitions/timezone"

  - variable: environmentVariables
    label: "Qbittorent environment"
    group: "Configuration"
    schema:
      type: list
      default: [ ]
      items:
        - variable: environmentVariable
          label: "Environment Variable"
          schema:
            type: dict
            attrs:
              - variable: name
                label: "Name"
                schema:
                  type: string
              - variable: value
                label: "Value"
                schema:
                  type: string

  - variable: appVolumeMounts
    label: "Qbittorent Storage"
    group: "Storage"
    schema:
      type: dict
      attrs:
        - variable: config
          label: "Configuration Volume"
          schema:
            type: dict
            attrs:
              - variable: datasetName
                label: "Configuration Volume Dataset Name"
                schema:
                  type: string
                  hidden: true
                  $ref:
                    - "normalize/ixVolume"
                  show_if: [["hostPathEnabled", "=", false]]
                  default: "ix-qbittorent_config"
                  editable: false
              - variable: mountPath
                label: "Configuration Mount Path"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  hidden: true
                  editable: true
                  default: "/config"
              - variable: hostPathEnabled
                label: "Enable Custom Host Path for Qbittorent Configuration Volume"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path for Qbittorent Configuration Volume"
                      schema:
                        type: hostpath
                        required: true
        - variable: downloads
          label: "Downloads Volume"
          schema:
            type: dict
            attrs:
              - variable: datasetName
                label: "Downloads Volume Dataset Name"
                schema:
                  type: string
                  hidden: true
                  $ref:
                    - "normalize/ixVolume"
                  show_if: [["hostPathEnabled", "=", false]]
                  default: "ix-qbittorent_data"
                  editable: false
              - variable: mountPath
                label: "Downloads Mount Path"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  hidden: true
                  editable: true
                  default: "/downloads"
              - variable: hostPathEnabled
                label: "Enable Custom Host Path for Qbittorent Downloads Volume"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path for Qbittorent Downloads Volume"
                      schema:
                        type: hostpath
                        required: true

  - variable: extraAppVolumeMounts
    label: "Extra Host Path Volumes"
    group: "Storage"
    schema:
      type: list
      items:
        - variable: extraAppVolume
          label: "Host Path Volume"
          description: "Add an extra host path volume for Qbittorent application"
          schema:
            type: dict
            attrs:
              - variable: mountPath
                label: "Mount Path in Pod"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  required: true
              - variable: hostPath
                label: "Host Path"
                description: "Host path"
                schema:
                  type: hostpath
                  required: true

  - variable: enableResourceLimits
    label: "Enable Pod resource limits"
    group: "Resource Limits"
    schema:
      type: boolean
      default: false
  - variable: cpuLimit
    label: "CPU Limresource limitsit"
    description: "CPU resource limit allow  plain integer values with suffix m(milli) e.g 1000m, 100."
    group: "Resource Limits"
    schema:
      type: string
      show_if: [["enableResourceLimits", "=", true]]
      valid_chars: "^\\d+(?:\\.\\d+(?!.*m$)|m?$)"
      default: "4000m"
  - variable: memLimit
    label: "Memory Limit"
    group: "Resource Limits"
    description: "Memory limits is specified by number of bytes. Followed by quantity suffix like E,P,T,G,M,k and Ei,Pi,Ti,Mi,Gi,Ki can also be used. e.g 129e6, 129M,  128974848000m, 123Mi"
    schema:
      type: string
      show_if: [["enableResourceLimits", "=", true]]
      valid_chars: "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
      default: "8Gi"

  # Enable privileged
  - variable: securityContext
    group: "Security"
    label: "Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: privileged
          label: "Enable privileged mode for Common-Chart based charts"
          schema:
            type: boolean
            default: false
  # Set Pod Security Policy
  - variable: podSecurityContext
    group: "Security"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsNonRoot
          label: "runAsNonRoot"
          schema:
            type: boolean
            default: true
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
        - variable: fsGroupChangePolicy
          label: "When should we take ownership?"
          schema:
            type: string
            default: "OnRootMismatch"
            enum:
              - value: "OnRootMismatch"
                description: "OnRootMismatch"
              - value: "Always"
                description: "Always"